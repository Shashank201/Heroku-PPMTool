{"version":3,"sources":["components/Project/CreateProjectButton.js","axios.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTasks.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Login.js","components/UserManagement/Register.js","securityUtils/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["CreateProjectButton","Fragment","to","className","instance","axios","create","baseURL","setAuthToken","token","defaults","headers","common","interceptors","request","use","config","localStorage","getItem","console","log","Authorization","error","Promise","reject","GET_ERRORS","createProject","project","history","dispatch","a","post","then","res","push","type","payload","catch","err","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","Component","connect","projectId","delete","Dashboard","getProjects","projectList","projects","map","index","key","state","get","logout","removeItem","Header","logoutHandler","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","proptype","PropTypes","object","isRequired","func","AddProject","start_date","end_date","errors","onFieldChangeHandler","e","setState","target","name","value","onFormSubmit","preventDefault","newProject","nextProps","onSubmit","classnames","placeholder","onChange","initialState","project_tasks","project_task","combineReducers","action","filter","backlog","task","projectSequence","middleware","thunk","ReactDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","updateProject","match","params","getProject","disabled","ProjectTasks","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","backlog_id","pt_id","confirm","Backlog","todo_tasks","status","inprogress_tasks","done_tasks","todo_project_tasks","inprogress_project_tasks","done_project_tasks","ProjectBoard","getBacklog","boardContent","length","projectNotFound","role","AddProjectTask","dueDate","projectTask","addProjectTask","project_Task","UpdateProjectTask","updatedProjectTask","updateProjectTask","getProjectTask","patch","Landing","Login","username","password","loginRequest","loginUser","setItem","decoded","jwt_decode","Register","confirmPassword","newUser","createNewUser","SecuredRoute","component","otherProps","render","jwtToken","decoded_jwtToken","current_time","Date","now","exp","location","href","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b4112c54.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  //baseURL: \"http://localhost:8080/\",\r\n  baseURL: \"https://svars8-ppmtool.herokuapp.com/\",\r\n});\r\n\r\nexport const setAuthToken = (token) => {\r\n  if (token) {\r\n    //applying token\r\n    instance.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    //deleting the token from header\r\n    delete instance.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"jwtToken\");\r\n    console.log(\"interceptor token:\" + token);\r\n    if (token) {\r\n      config.headers.Authorization = token;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n// Types for BACKLOG\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n// Types for security\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const REMOVE_CURRENT_USER = \"REMOVE_CURRENT_USER\";\r\n","import axios from \"../axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  await axios\r\n    .post(\"api/project\", project)\r\n    .then((res) => {\r\n      history.push(\"/dashboard\");\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    });\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  await axios\r\n    .get(\"api/project/all\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response);\r\n    });\r\n};\r\n\r\nexport const getProject = (projectId, history) => async (dispatch) => {\r\n  await axios\r\n    .get(`api/project/${projectId}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_PROJECT,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      history.push(\"/dashboard\");\r\n    });\r\n};\r\n\r\nexport const deleteProject = (projectId) => async (dispatch) => {\r\n  await axios\r\n    .delete(`api/project/${projectId}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: DELETE_PROJECT,\r\n        payload: projectId,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response.data);\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board</i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                <Link to=\"#\">\r\n                  <li\r\n                    className=\"list-group-item delete\"\r\n                    onClick={() =>\r\n                      this.onDeleteClick(project.projectIdentifier)\r\n                    }\r\n                  >\r\n                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                  </li>\r\n                </Link>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React, { Component } from \"react\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const projectList = this.props.project.projects;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projectList.map((project, index) => (\r\n                <ProjectItem key={index} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  getProjects: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"../axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER, REMOVE_CURRENT_USER } from \"./types\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { setAuthToken } from \"../axios\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  await axios\r\n    .post(\"api/users/register\", newUser)\r\n    .then((res) => {\r\n      history.push(\"/login\");\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\nexport const loginUser = (loginRequest) => async (dispatch) => {\r\n  await axios\r\n    .post(\"api/users/login\", loginRequest)\r\n    .then((res) => {\r\n      // extract token from res.data\r\n      const { token } = res.data;\r\n      // store token in localStorage\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // set token in header**\r\n      setAuthToken(token);\r\n      // decode token in React\r\n      const decoded = jwt_decode(token);\r\n      // dispatch to securityReducer\r\n      dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded,\r\n      });\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setAuthToken(false);\r\n  dispatch({\r\n    type: REMOVE_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logoutHandler = () => this.props.logout();\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user ? user.fullName : \"\"}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/\" onClick={this.logoutHandler}>\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.proptype = {\r\n  security: PropTypes.object.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  state = {\r\n    projectName: \"\",\r\n    projectIdentifier: \"\",\r\n    description: \"\",\r\n    start_date: \"\",\r\n    end_date: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onFieldChangeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  };\r\n\r\n  // React Life Cycle function\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onFormSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">{errors.projectName}</span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier,\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">\r\n                    {errors.projectIdentifier}\r\n                  </span>\r\n                </div>\r\n                {\r\n                  // <!-- disabled for Edit Only!! remove \"disabled\" for the Create operation -->\r\n                }\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  ></textarea>\r\n                  <span className=\"invalid-feedback\">{errors.description}</span>\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.start_date,\r\n                    })}\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">{errors.start_date}</span>\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.end_date,\r\n                    })}\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">{errors.end_date}</span>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          (project) => project.projectIdentifier !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (task) => task.projectSequence !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER, REMOVE_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: true,\r\n        user: action.payload,\r\n      };\r\n\r\n    case REMOVE_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: false,\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ReactDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProject extends Component {\r\n  state = {\r\n    id: \"\",\r\n    projectName: \"\",\r\n    projectIdentifier: \"\",\r\n    description: \"\",\r\n    start_date: \"\",\r\n    end_date: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onFieldChangeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.project) {\r\n      const {\r\n        id,\r\n        projectName,\r\n        projectIdentifier,\r\n        description,\r\n        start_date,\r\n        end_date,\r\n      } = nextProps.project;\r\n\r\n      this.setState({\r\n        id,\r\n        projectName,\r\n        projectIdentifier,\r\n        description,\r\n        start_date,\r\n        end_date,\r\n      });\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"project\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">{errors.projectName}</span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier,\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    disabled\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">\r\n                    {errors.projectIdentifier}\r\n                  </span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  ></textarea>\r\n                  <span className=\"invalid-feedback\">{errors.description}</span>\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.start_date,\r\n                    })}\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date ? this.state.start_date : \"\"}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">{errors.start_date}</span>\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.end_date,\r\n                    })}\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date ? this.state.end_date : \"\"}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">{errors.end_date}</span>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\n\r\nclass ProjectTasks extends Component {\r\n  onDeleteClick = () => {\r\n    const { projectIdentifier, projectSequence } = this.props.project_task;\r\n    console.log(\r\n      `ProjectIdentifier: ${projectIdentifier} || ProjectSeq : ${projectSequence}`\r\n    );\r\n    this.props.deleteProjectTask(\r\n      projectIdentifier,\r\n      projectSequence,\r\n      this.props.history\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTasks.proptype = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTasks);\r\n","import axios from \"../axios\";\r\nimport {\r\n  DELETE_PROJECT_TASK,\r\n  GET_BACKLOG,\r\n  GET_ERRORS,\r\n  GET_PROJECT_TASK,\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (backlog_id, project_Task, history) => async (\r\n  dispatch\r\n) => {\r\n  await axios\r\n    .post(`api/backlog/${backlog_id}`, project_Task)\r\n    .then((res) => {\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  await axios\r\n    .get(`api/backlog/${backlog_id}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_BACKLOG,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\r\n  dispatch\r\n) => {\r\n  await axios\r\n    .get(`api/backlog/${backlog_id}/${pt_id}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_PROJECT_TASK,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response.data,\r\n      });\r\n\r\n      history.push(`/dashboard`);\r\n    });\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  updatedProjectTask,\r\n  history\r\n) => async (dispatch) => {\r\n  axios\r\n    .patch(`api/backlog/${backlog_id}/${pt_id}`, updatedProjectTask)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id, history) => async (\r\n  dispatch\r\n) => {\r\n  if (window.confirm(`Are you sure you want to delete ${pt_id} ?`)) {\r\n    await axios\r\n      .delete(`api/backlog/${backlog_id}/${pt_id}`)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: DELETE_PROJECT_TASK,\r\n          payload: pt_id,\r\n        });\r\n\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: {},\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTasks from \"./ProjectTasks/ProjectTasks\";\r\n\r\nexport default class Backlog extends Component {\r\n  render() {\r\n    const { project_tasks } = this.props;\r\n\r\n    const todo_tasks = project_tasks.filter((task) => task.status === \"TO_DO\");\r\n    const inprogress_tasks = project_tasks.filter(\r\n      (task) => task.status === \"IN_PROGRESS\"\r\n    );\r\n    const done_tasks = project_tasks.filter((task) => task.status === \"DONE\");\r\n\r\n    const todo_project_tasks = todo_tasks.map((project_task) => (\r\n      <ProjectTasks key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    const inprogress_project_tasks = inprogress_tasks.map((project_task) => (\r\n      <ProjectTasks key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    const done_project_tasks = done_tasks.map((project_task) => (\r\n      <ProjectTasks key={project_task.id} project_task={project_task} />\r\n    ));\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n\r\n            {/*<!-- SAMPLE PROJECT TASK STARTS HERE -->*/}\r\n            {todo_project_tasks}\r\n            {/* <!-- SAMPLE PROJECT TASK ENDS HERE -->*/}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inprogress_project_tasks}\r\n            {/*<!-- SAMPLE PROJECT TASK STARTS HERE -->  <!-- SAMPLE PROJECT TASK ENDS HERE -->*/}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {done_project_tasks}\r\n            {/*<!-- SAMPLE PROJECT TASK STARTS HERE -->  <!-- SAMPLE PROJECT TASK ENDS HERE -->*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Backlog from \"./Backlog\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  componentDidMount() {\r\n    this.props.getBacklog(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.props;\r\n\r\n    let boardContent;\r\n\r\n    if (project_tasks?.length < 1) {\r\n      if (errors?.projectNotFound) {\r\n        boardContent = (\r\n          <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n            {errors.projectNotFound}\r\n          </div>\r\n        );\r\n      } else if (errors?.projectIdentifier) {\r\n        boardContent = (\r\n          <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n            {errors.projectIdentifier}\r\n          </div>\r\n        );\r\n      } else {\r\n        boardContent = (\r\n          <div className=\"alert alert-info text-center\" role=\"alert\">\r\n            No Project Tasks on this board\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      boardContent = <Backlog project_tasks={project_tasks} />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {boardContent}\r\n        {/*<!--Backlog STARTS HERE -->  <!-- Backlog ENDS HERE -->*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.proptype = {\r\n  getBacklog: PropTypes.func.isRequired,\r\n  backlog: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProjectTask extends Component {\r\n  state = {\r\n    summary: \"\",\r\n    acceptanceCriteria: \"\",\r\n    status: \"\",\r\n    priority: 0,\r\n    dueDate: \"\",\r\n    projectIdentifier: this.props.match.params.id,\r\n    errors: {},\r\n  };\r\n\r\n  onFieldChangeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const projectTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n\r\n    console.log(projectTask);\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      projectTask,\r\n      this.props.history\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const errors = this.props.errors;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                <strong>Project Name : {this.state.projectIdentifier}</strong>\r\n              </p>\r\n              <form onSubmit={this.onFormSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">{errors.summary}</span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.proptype = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask,\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  state = {\r\n    id: \"\",\r\n    projectSequence: \"\",\r\n    summary: \"\",\r\n    acceptanceCriteria: \"\",\r\n    status: \"\",\r\n    priority: 0,\r\n    dueDate: \"\",\r\n    projectIdentifier: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onFieldChangeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getProjectTask(\r\n      this.props.match.params.backlog_id,\r\n      this.props.match.params.pt_id,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.project_task) {\r\n      const {\r\n        id,\r\n        projectSequence,\r\n        summary,\r\n        acceptanceCriteria,\r\n        status,\r\n        priority,\r\n        dueDate,\r\n        projectIdentifier,\r\n      } = nextProps.project_task;\r\n\r\n      this.setState({\r\n        id,\r\n        projectSequence,\r\n        summary,\r\n        acceptanceCriteria,\r\n        status,\r\n        priority,\r\n        dueDate,\r\n        projectIdentifier,\r\n      });\r\n    }\r\n  }\r\n\r\n  onFieldChangeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { projectIdentifier, projectSequence } = this.state;\r\n\r\n    const updatedProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n    };\r\n\r\n    this.props.updateProjectTask(\r\n      projectIdentifier,\r\n      projectSequence,\r\n      updatedProjectTask,\r\n      this.props.history\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.props;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.props.match.params.backlog_id}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                <strong>\r\n                  Project Name: {this.state.projectIdentifier} | Project Code:{\" \"}\r\n                  {this.state.projectSequence}\r\n                </strong>\r\n              </p>\r\n              <form onSubmit={this.onFormSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">{errors.summary}</span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate ? this.state.dueDate : \"\"}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.proptype = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.proptype = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n    this.props.loginUser(loginRequest);\r\n  };\r\n\r\n  onFieldChangeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.props;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onFormSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">{errors.username}</span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">{errors.password}</span>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.proptype = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    username: \"\",\r\n    fullName: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  };\r\n\r\n  onFieldChangeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.props;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onFormSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName,\r\n                    })}\r\n                    placeholder=\"Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">{errors.fullName}</span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">{errors.username}</span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">{errors.password}</span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onFieldChangeHandler}\r\n                  />\r\n                  <span className=\"invalid-feedback\">\r\n                    {errors.confirmPassword}\r\n                  </span>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.proptype = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  error: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.proptype = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(SecuredRoute);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Login from \"./components/UserManagement/Login\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport { setAuthToken } from \"./axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\r\n\r\nconst jwtToken = localStorage.getItem(\"jwtToken\");\r\n\r\nif (jwtToken) {\r\n  setAuthToken(jwtToken);\r\n  const decoded_jwtToken = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded_jwtToken,\r\n  });\r\n\r\n  const current_time = Date.now() / 1000;\r\n  if (decoded_jwtToken.exp < current_time) {\r\n    // handle logout\r\n    window.location.href = \"/\";\r\n    store.dispatch(logout());\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <BrowserRouter>\r\n          <Header />\r\n\r\n          {\r\n            // public routes\r\n          }\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          {\r\n            // secured or private routes\r\n          }\r\n\r\n          <Switch>\r\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/updateProject/:id\"\r\n              component={UpdateProject}\r\n            />\r\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/projectBoard/:id\"\r\n              component={ProjectBoard}\r\n            />\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/addProjectTask/:id\"\r\n              component={AddProjectTask}\r\n            />\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\r\n              component={UpdateProjectTask}\r\n            />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}